/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
/*   Windows 32 and 64 bit porting by blueCAPE: http://www.bluecape.com.pt   *\
|  Based on Windows porting (2.0.x v4) by Symscape: http://www.symscape.com   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0/vegetation";
    object      facesAgglomeration;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    left
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    right
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    back
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    front
    {
        type            calculated;
        value           uniform 756;
    }
    bottom
    {
        type            calculated;
        value           nonuniform List<scalar> 
51
(
757
758
759
758
760
761
762
762
758
762
763
760
761
763
762
764
765
765
764
758
759
759
765
766
766
765
764
761
762
757
757
757
761
761
764
757
758
758
758
757
760
760
766
766
763
763
761
761
758
759
758
)
;
    }
    top
    {
        type            calculated;
        value           nonuniform List<scalar> 
41
(
767
768
768
767
768
767
768
768
768
769
767
767
767
769
769
767
770
770
769
767
767
769
769
769
770
769
769
768
768
768
768
768
770
770
770
769
769
769
769
769
769
)
;
    }
    tower
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    air_to_vegetation
    {
        type            calculated;
        value           nonuniform List<scalar> 
438
(
771
772
773
774
771
773
775
771
776
777
778
779
780
778
778
781
782
772
772
778
779
778
782
777
783
784
774
785
786
787
786
788
781
789
790
775
791
792
775
793
794
786
795
796
795
795
789
789
791
797
798
798
798
772
799
772
799
799
772
773
772
799
781
799
774
774
774
771
771
798
786
771
774
773
773
793
794
794
794
793
793
800
801
794
794
800
802
803
803
771
781
782
782
781
785
785
797
777
777
777
777
804
780
780
804
780
779
780
804
779
805
778
778
781
772
772
778
799
799
779
778
799
779
779
779
779
779
779
777
777
783
783
777
783
783
783
806
806
796
796
787
796
796
774
785
785
785
806
806
806
806
784
796
796
788
788
807
773
788
807
807
788
787
789
789
789
808
808
794
800
808
793
808
808
808
790
790
802
802
802
791
791
791
802
775
809
809
792
792
810
811
787
787
787
787
805
787
805
805
781
782
811
782
797
798
798
798
801
803
790
800
801
801
801
801
803
797
785
797
777
777
778
805
805
792
783
784
806
805
808
808
790
790
800
775
812
776
776
776
780
780
791
791
803
803
809
813
813
812
792
792
810
810
810
792
792
797
797
798
798
797
798
798
798
776
771
798
798
793
793
794
793
801
803
800
800
801
801
801
800
802
775
801
801
803
812
814
807
795
814
807
814
797
785
797
797
777
804
804
804
780
779
780
780
779
804
804
804
811
805
805
783
783
787
786
786
786
806
784
774
784
796
784
795
795
784
784
795
788
787
787
788
773
773
788
789
807
789
807
807
788
808
808
793
794
808
793
793
808
808
808
808
808
790
800
800
790
791
802
802
775
812
809
809
809
813
813
809
776
792
813
813
809
792
776
777
776
777
775
811
810
780
814
814
814
814
811
810
810
810
783
783
783
814
812
812
812
812
814
814
814
814
814
807
814
814
787
787
787
787
787
805
803
803
814
781
813
814
814
811
782
782
813
811
811
811
782
782
783
792
812
786
795
812
812
814
814
807
)
;
    }
    procBoundary19to5
    {
        type            processor;
        value           nonuniform List<scalar> 
53
(
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
)
;
    }
    procBoundary19to7
    {
        type            processor;
        value           nonuniform List<scalar> 9(868 869 870 871 872 873 874 875 876);
    }
    procBoundary19to11
    {
        type            processor;
        value           nonuniform List<scalar> 
38
(
877
878
879
880
881
882
883
884
885
886
887
888
889
890
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
)
;
    }
    procBoundary19to14
    {
        type            processor;
        value           nonuniform List<scalar> 
13
(
915
916
917
918
919
920
921
922
923
924
925
926
927
)
;
    }
    procBoundary19to15
    {
        type            processor;
        value           nonuniform List<scalar> 
126
(
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
)
;
    }
    procBoundary19to16
    {
        type            processor;
        value           nonuniform List<scalar> 
208
(
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
)
;
    }
    procBoundary19to17
    {
        type            processor;
        value           nonuniform List<scalar> 
172
(
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1346
1347
1348
1349
1350
1351
1352
1353
1354
1355
1356
1357
1358
1359
1360
1361
1362
1363
1364
1365
1366
1367
1368
1369
1370
1371
1372
1373
1374
1375
1376
1377
1378
1379
1380
1381
1382
1383
1384
1385
1386
1387
1388
1389
1390
1391
1392
1393
1394
1395
1396
1397
1398
1399
1400
1401
1402
1403
1404
1405
1406
1407
1408
1409
1410
1411
1412
1413
1414
1415
1416
1417
1418
1419
1420
1421
1422
1423
1424
1425
1426
1427
1428
1429
1430
1431
1432
1433
)
;
    }
    procBoundary19to18
    {
        type            processor;
        value           nonuniform List<scalar> 
264
(
1434
1435
1436
1437
1438
1439
1440
1441
1442
1443
1444
1445
1446
1447
1448
1449
1450
1451
1452
1453
1454
1455
1456
1457
1458
1459
1460
1461
1462
1463
1464
1465
1466
1467
1468
1469
1470
1471
1472
1473
1474
1475
1476
1477
1478
1479
1480
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1497
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1508
1509
1510
1511
1512
1513
1514
1515
1516
1517
1518
1519
1520
1521
1522
1523
1524
1525
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
1536
1537
1538
1539
1540
1541
1542
1543
1544
1545
1546
1547
1548
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1559
1560
1561
1562
1563
1564
1565
1566
1567
1568
1569
1570
1571
1572
1573
1574
1575
1576
1577
1578
1579
1580
1581
1582
1583
1584
1585
1586
1587
1588
1589
1590
1591
1592
1593
1594
1595
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1646
1647
1648
1649
1650
1651
1652
1653
1654
1655
1656
1657
1658
1659
1660
1661
1662
1663
1664
1665
1666
1667
1668
1669
1670
1671
1672
1673
1674
1675
1676
1677
1678
1679
1680
1681
1682
1683
1684
1685
1686
1687
1688
1689
1690
1691
1692
1693
1694
1695
1696
1697
)
;
    }
}


// ************************************************************************* //
