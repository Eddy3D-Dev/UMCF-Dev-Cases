/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
/*   Windows 32 and 64 bit porting by blueCAPE: http://www.bluecape.com.pt   *\
|  Based on Windows porting (2.0.x v4) by Symscape: http://www.symscape.com   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0/vegetation";
    object      facesAgglomeration;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    left
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    right
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    back
    {
        type            calculated;
        value           uniform 303;
    }
    front
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    bottom
    {
        type            calculated;
        value           nonuniform List<scalar> 
133
(
304
305
306
304
307
308
307
306
309
306
310
311
312
313
314
315
316
317
318
319
314
313
320
308
321
310
309
322
315
323
324
323
325
314
323
326
326
326
317
323
314
307
307
309
311
311
311
327
328
328
328
316
316
316
304
326
326
326
320
329
313
329
329
320
321
321
321
330
330
331
331
331
324
324
332
332
330
330
318
318
318
309
322
307
304
317
317
329
333
333
304
305
305
305
308
308
333
311
328
315
306
306
315
310
310
310
312
312
312
333
320
320
324
331
313
325
325
325
332
332
324
332
327
312
327
327
327
319
319
319
316
322
322
)
;
    }
    top
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    tower
    {
        type            calculated;
        value           nonuniform List<scalar> 0();
    }
    air_to_vegetation
    {
        type            calculated;
        value           nonuniform List<scalar> 
436
(
334
335
334
335
336
334
337
338
334
337
339
336
340
340
341
342
343
344
345
341
345
343
334
335
338
346
335
335
347
336
336
348
348
349
349
350
351
352
353
353
354
354
353
334
350
351
351
351
351
351
351
351
351
335
335
338
338
355
355
356
352
357
358
341
342
359
357
357
341
357
357
346
354
354
353
353
353
360
339
360
360
339
335
335
339
339
339
361
362
362
362
363
347
361
347
336
364
340
364
340
340
341
342
342
348
348
343
343
343
342
342
365
349
341
345
341
344
366
337
337
363
355
346
346
367
367
348
342
349
349
368
350
366
352
351
337
351
351
369
364
355
355
356
355
370
370
362
371
362
362
363
371
371
363
356
354
346
372
372
360
367
360
357
373
342
342
342
348
342
359
342
359
342
357
374
374
374
349
373
373
374
358
359
359
374
359
374
359
375
369
336
336
336
347
348
358
358
345
338
354
335
347
364
336
336
364
364
350
376
353
338
338
335
338
338
338
358
358
339
360
335
335
339
360
339
361
362
361
362
363
361
363
361
347
340
347
347
336
364
340
365
341
344
344
342
348
348
343
343
342
344
365
365
365
345
365
343
344
365
345
365
349
349
345
345
349
344
344
344
344
344
343
368
368
368
368
368
368
334
366
366
337
364
355
355
355
355
355
370
377
362
336
371
334
346
337
350
350
351
350
351
351
369
372
354
354
354
372
372
365
365
365
340
340
347
340
368
376
370
376
368
366
352
366
350
366
351
352
351
351
351
351
351
352
352
337
351
351
352
351
352
369
375
369
369
369
369
369
355
356
376
376
370
370
370
376
376
377
376
376
370
377
377
375
375
375
377
377
377
377
375
377
377
377
377
377
361
371
362
361
363
363
371
356
356
371
346
366
346
354
372
372
367
353
360
372
372
367
367
367
372
372
367
352
357
357
359
357
374
374
373
373
359
373
373
358
373
358
349
373
359
359
368
368
368
369
368
368
356
371
356
375
375
369
368
368
)
;
    }
    procBoundary9to1
    {
        type            processor;
        value           nonuniform List<scalar> 
63
(
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
)
;
    }
    procBoundary9to2
    {
        type            processor;
        value           nonuniform List<scalar> 
197
(
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
611
612
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
)
;
    }
    procBoundary9to4
    {
        type            processor;
        value           nonuniform List<scalar> 
121
(
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
656
657
658
659
660
661
662
663
664
665
666
667
668
669
670
671
672
673
674
675
676
677
678
679
680
681
682
683
684
685
686
687
688
689
690
691
692
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
710
711
712
713
714
715
716
717
718
719
720
721
722
723
724
725
726
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
743
744
745
746
747
748
749
750
751
752
753
754
755
756
757
758
)
;
    }
    procBoundary9to6
    {
        type            processor;
        value           nonuniform List<scalar> 
132
(
759
760
761
762
763
764
765
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
786
787
788
789
790
791
792
793
794
795
796
797
798
799
800
801
802
803
804
805
806
807
808
809
810
811
812
813
814
815
816
817
818
819
820
821
822
823
824
825
826
827
828
829
830
831
832
833
834
835
836
837
838
839
840
841
842
843
844
845
846
847
848
849
850
851
852
853
854
855
856
857
858
859
860
861
862
863
864
865
866
867
868
869
870
871
872
873
874
875
876
877
878
879
880
881
882
883
884
885
886
887
888
889
890
)
;
    }
    procBoundary9to7
    {
        type            processor;
        value           nonuniform List<scalar> 
57
(
891
892
893
894
895
896
897
898
899
900
901
902
903
904
905
906
907
908
909
910
911
912
913
914
915
916
917
918
919
920
921
922
923
924
925
926
927
928
929
930
931
932
933
934
935
936
937
938
939
940
941
942
943
944
945
946
947
)
;
    }
    procBoundary9to8
    {
        type            processor;
        value           nonuniform List<scalar> 
193
(
948
949
950
951
952
953
954
955
956
957
958
959
960
961
962
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
989
990
991
992
993
994
995
996
997
998
999
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1018
1019
1020
1021
1022
1023
1024
1025
1026
1027
1028
1029
1030
1031
1032
1033
1034
1035
1036
1037
1038
1039
1040
1041
1042
1043
1044
1045
1046
1047
1048
1049
1050
1051
1052
1053
1054
1055
1056
1057
1058
1059
1060
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
1094
1095
1096
1097
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
)
;
    }
}


// ************************************************************************* //
